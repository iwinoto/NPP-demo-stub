swagger: "2.0"
info:
  version: "0.0.1"
  title: Mobile Payments API
# during dev, should point to your local machine
host: localhost:6001
# basePath prefixes all resource paths 
basePath: /v1
# 
schemes:
  # tip: remove http to make production-grade
  - http
  - https
# format of bodies a client can send (Content-Type)
consumes:
  - application/json
# format of the responses to the client (Accepts)
produces:
  - application/json
paths:
  # Remitter resources
  /remitters:
    # binds a127 app logic to a route
    x-swagger-router-controller: remitters
    get:
      tags:
        - remitters
      description: Get a remitter by mobile phone number
      # used as the method name of the controller
      operationId: getRemitter
      parameters:
        - name: mobileNumber
          in: query
          description: The mobile phone number of the remitter
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/Remitter"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
#    get:
#      description: Get all remitters
      # used as the method name of the controller
#      operationId: getAllRemitters
#      responses:
#        "200":
#          description: Success
#          type: array
#          items:
            # a pointer to a definition
#            $ref: "#/definitions/Remitter"
        # responses may fall through to errors
#        default:
#          description: Error
#          schema:
#            $ref: "#/definitions/ErrorResponse"
    post:
      tags:
        - remitters
      description: Register a new remitter mobile number
      operationId: addRemitter
      parameters:
        - name: remitter
          in: body
          description: Remitter object to store
          required: true
          schema:
            $ref: "#/definitions/Remitter"
            required:
              - remitterName
              - mobileNumber
              - acount
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Remitter"
        "201":
          description: Success
          schema:
            $ref: "#/definitions/Remitter" 
        "405":
          description: Invalid input
          schema:
            $ref: "#/definitions/ErrorResponse"
    put:
      tags:
        - remitters
      description: Update a remitter
      operationId: updateRemitter
      parameters:
        - name: mobileNumber
          in: query
          description: Key to remitter to be updated
          required: true
          type: string
        - name: remitter
          in: body
          description: New remitter properties. mobileNumber is the key so it will not be changed
          required: true
          schema:
            $ref: "#/definitions/Remitter"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Remitter"
        "201":
          description: Success
          schema:
            $ref: "#/definitions/Remitter" 
        "405":
          description: Invalid input
        "404":
          description: Not found
          schema:
            $ref: "#/definitions/ErrorResponse"
    delete:
      tags:
        - remitters
      description: Delete a remitter
      operationId: deleteRemitter
      parameters:
        - name: mobileNumber
          in: query
          description: Key to remitter to be deleted
          required: true
          type: string
      responses:
        "200":
          description: Success
        "201":
          description: Success
        "404":
          description: Not found
          schema:
            $ref: "#/definitions/ErrorResponse"

  # Merchant resources
  /merchants:
    # binds a127 app logic to a route
    x-swagger-router-controller: merchants
    get:
      tags:
        - merchants
      description: Get a merchant by ABN
      # used as the method name of the controller
      operationId: getMerchant
      parameters:
        - name: abn
          in: query
          description: The ABN of the merchant
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/Merchant"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
#    get:
#      description: Get all merchants
      # used as the method name of the controller
#      operationId: getAllMerchant
#      responses:
#        "200":
#          description: Success
#          type: array
#          items:
            # a pointer to a definition
#            $ref: "#/definitions/Merchant"
        # responses may fall through to errors
#        default:
#          description: Error
#          schema:
#            $ref: "#/definitions/ErrorResponse"
    post:
      tags:
        - merchants
      description: Register a new merchant ABN
      operationId: addMerchant
      parameters:
        - name: merchant
          in: body
          description: Merchant object to store
          required: true
          schema:
            $ref: "#/definitions/Merchant"
            required:
              - merchantName
              - abn
              - account
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Merchant"
        "201":
          description: Success
          schema:
            $ref: "#/definitions/Merchant" 
        "405":
          description: Invalid input
          schema:
            $ref: "#/definitions/ErrorResponse"
    put:
      tags:
        - merchants
      description: Update a merchant
      operationId: updateMerchant
      parameters:
        - name: abn
          in: query
          description: Key to merchant to be updated
          required: true
          type: string
        - name: merchant
          in: body
          description: New merchant properties. abn is the key so it will not be changed
          required: true
          schema:
            $ref: "#/definitions/Merchant"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Merchant"
        "201":
          description: Success
          schema:
            $ref: "#/definitions/Merchant" 
        "405":
          description: Invalid input
        "404":
          description: Not found
          schema:
            $ref: "#/definitions/ErrorResponse"
    delete:
      tags:
        - merchants
      description: Delete a merchant
      operationId: deleteMerchant
      parameters:
        - name: abn
          in: query
          description: Key to merchant to be deleted
          required: true
          type: string
      responses:
        "200":
          description: Success
        "201":
          description: Success
        "404":
          description: Not found
          schema:
            $ref: "#/definitions/ErrorResponse"

  # Merchant resources
  /invoices:
    # binds a127 app logic to a route
    x-swagger-router-controller: invoices
    get:
      tags:
        - invoices
      description: Get an invoice by invoice number
      # used as the method name of the controller
      operationId: getInvoice
      parameters:
        - name: invoice
          in: query
          description: The ID of the invoice
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/Invoice"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
#    get:
#      description: Get all merchants
      # used as the method name of the controller
#      operationId: getAllMerchant
#      responses:
#        "200":
#          description: Success
#          type: array
#          items:
            # a pointer to a definition
#            $ref: "#/definitions/Merchant"
        # responses may fall through to errors
#        default:
#          description: Error
#          schema:
#            $ref: "#/definitions/ErrorResponse"
    post:
      tags:
        - invoices
      description: Create a new Invoice
      operationId: addInvoice
      parameters:
        - name: invoice
          in: body
          description: Invoice object to store
          required: true
          schema:
            $ref: "#/definitions/Invoice"
            required:
              - invoice
              - status
              - amount
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Invoice"
        "201":
          description: Success
          schema:
            $ref: "#/definitions/Invoice" 
        "405":
          description: Invalid input
          schema:
            $ref: "#/definitions/ErrorResponse"

  # Manager inbvoice state            
  /invoices/generated:
    get:
      tags:
        - invoices
      description: Get all invoices where status is generated
      operationId: generatedInvoices
      responses:
        "200":
          description: Succes
          schema:
            type: array
            items:
              $ref: "#/definitions/Invoice"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /invoices/presented:
    get:
      tags:
        - invoices
      description: Get all invoices where status is presented
      operationId: presentedInvoices
      responses:
        "200":
          description: Succes
          schema:
            type: array
            items:
              $ref: "#/definitions/Invoice"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    put:
      tags:
        - invoices
      description: Change status of invoice from "generated" to "presented"
      operationId: setStatusPresented
      parameters:
        - name: invoice
          in: query
          description: Key to the invoice to be updated
          required: true
          type: string
      responses:
        "200":
          description: Success
        "405":
          description: Invalid input, invalid starting state
          schema:
            $ref: "#/definitions/ErrorResponse"
        "404":
          description: Not found
          schema:
            $ref: "#/definitions/ErrorResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /invoices/initiated:
    get:
      tags:
        - invoices
      description: Get all invoices where status is payment initiated
      operationId: initiatedInvoices
      responses:
        "200":
          description: Succes
          schema:
            type: array
            items:
              $ref: "#/definitions/Invoice"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    put:
      tags:
        - invoices
      description: Change status of invoice from "presented" to payment "initiated"
      operationId: setStatusInitiated
      parameters:
        - name: invoice
          in: query
          description: Key to the invoice to be updated
          required: true
          type: string
        - name: remitter
          in: body
          description: Remitter initaiting the payment
          required: true
          schema:
            $ref: "#/definitions/Remitter"
      responses:
        "200":
          description: Success
        "405":
          description: Invalid input, invalid starting state
          schema:
            $ref: "#/definitions/ErrorResponse"
        "404":
          description: Not found
          schema:
            $ref: "#/definitions/ErrorResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /invoices/successful:
    get:
      tags:
        - invoices
      description: Get all invoices where status is payment sucessful
      operationId: successfulInvoices
      responses:
        "200":
          description: Succes
          schema:
            type: array
            items:
              $ref: "#/definitions/Invoice"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    put:
      tags:
        - invoices
      description: Change status of invoice from payment "initiated" to payment "successful"
      operationId: setStatusSuccessful
      parameters:
        - name: invoice
          in: query
          description: Key to the invoice to be updated
          required: true
          type: string
      responses:
        "200":
          description: Success
        "405":
          description: Invalid input, invalid starting state
          schema:
            $ref: "#/definitions/ErrorResponse"
        "404":
          description: Not found
          schema:
            $ref: "#/definitions/ErrorResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /invoices/failed:
    get:
      tags:
        - invoices
      description: Get all invoices where status is payment failed
      operationId: failedInvoices
      responses:
        "200":
          description: Succes
          schema:
            type: array
            items:
              $ref: "#/definitions/Invoice"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    put:
      tags:
        - invoices
      description: Change status of invoice from payment "initiated" to payment "failed"
      operationId: setStatusFailed
      parameters:
        - name: invoice
          in: query
          description: Key to the invoice to be updated
          required: true
          type: string
      responses:
        "200":
          description: Success
        "405":
          description: Invalid input, invalid starting state
          schema:
            $ref: "#/definitions/ErrorResponse"
        "404":
          description: Not found
          schema:
            $ref: "#/definitions/ErrorResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"


# complex objects have schema definitions
definitions:
  Remitter:
    properties:
      remitterName:
        type: string
      mobileNumber:
        type: string
      account:
        $ref: "#/definitions/Account"
  Merchant:
    properties:
      merchantName:
        type: string
      abn:
        type: string
      account:
        $ref: "#/definitions/Account"
  Invoice:
    properties:
      invoice:
        type: string
      amount:
        type: number
      status:
        type: string
        enum:
          - generated
          - presented
          - initiated
          - successful
          - failed
      remitterMobile:
        type: string
      merchantABN:
        type: string
      created:
        type: string
  Account:
    properties:
      name:
        type: string
      bsb:
        type: string
      account:
        type: string
  ErrorResponse:
    required:
      - message
    properties:
      message:
        type: string
